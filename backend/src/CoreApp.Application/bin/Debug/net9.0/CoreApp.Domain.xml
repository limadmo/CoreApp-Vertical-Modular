<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreApp.Domain</name>
    </assembly>
    <members>
        <member name="T:CoreApp.Domain.Configuration.DataRetentionConfiguration">
            <summary>
            Configurações de políticas de retenção de dados farmacêuticos brasileiros
            Define períodos de arquivamento baseados em regulamentações ANVISA e necessidades de auditoria
            </summary>
            <remarks>
            Esta configuração implementa as melhores práticas de retenção de dados
            para estabelecimentos farmacêuticos no Brasil, garantindo compliance total
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.AnosRetencaoSoftDelete">
            <summary>
            Tempo em anos para manter soft deletes antes do arquivamento
            Padrão: 5 anos conforme regulamentação farmacêutica brasileira
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.AnosRetencaoArquivo">
            <summary>
            Tempo em anos para manter dados arquivados nas tabelas _log
            Padrão: 20 anos para compliance farmacêutico total
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.EntidadesProtegidas">
            <summary>
            Entidades que NUNCA devem ser arquivadas automaticamente
            Ex: Dados de medicamentos controlados requerem retenção perpétua
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.RetencaoPorEntidade">
            <summary>
            Configurações específicas de retenção por tipo de entidade
            Permite personalizar período de arquivamento baseado na importância farmacêutica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.AjusteRetencaoPorTipoTenant">
            <summary>
            Configurações específicas para diferentes tipos de farmácias
            Permite ajustar retenção baseada no porte da farmácia
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.Execucao">
            <summary>
            Configurações de execução do processo de arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.DataRetentionConfiguration.VerificacaoIntegridade">
            <summary>
            Configurações de integridade e verificação
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Configuration.DataRetentionConfiguration.ObterPeriodoRetencao(System.String,CoreApp.Domain.Configuration.TipoTenantEnum)">
            <summary>
            Obtém o período de retenção para uma entidade específica
            Considera configurações por entidade e ajustes por tipo de tenant
            </summary>
            <param name="nomeEntidade">Nome da entidade</param>
            <param name="tipoTenant">Tipo do tenant (farmácia)</param>
            <returns>Período de retenção em anos</returns>
        </member>
        <member name="T:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration">
            <summary>
            Configurações específicas de execução do processo de arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration.TamanhoLote">
            <summary>
            Número máximo de registros processados por lote
            Evita sobrecarregar o banco durante arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration.IntervaloEntreLotes">
            <summary>
            Intervalo em milissegundos entre lotes
            Permite que outras operações sejam executadas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration.TimeoutMinutos">
            <summary>
            Timeout em minutos para operações de arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration.VerificarIntegridadeAposArquivamento">
            <summary>
            Se true, executa verificação de integridade após arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration.NotificarAdministrador">
            <summary>
            Se true, envia notificação por email ao administrador após arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.ArchivalExecutionConfiguration.EmailAdministrador">
            <summary>
            Email do administrador para notificações
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Configuration.IntegrityCheckConfiguration">
            <summary>
            Configurações de verificação de integridade dos dados arquivados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.IntegrityCheckConfiguration.TamanhoAmostra">
            <summary>
            Tamanho da amostra para verificação de integridade (número de registros)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.IntegrityCheckConfiguration.PercentualMinimoIntegridade">
            <summary>
            Percentual mínimo de integridade aceitável
            Se abaixo, dispara alertas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.IntegrityCheckConfiguration.RearquivarDadosCorrempidos">
            <summary>
            Se true, re-arquiva automaticamente registros com problemas de integridade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Configuration.IntegrityCheckConfiguration.MaximoTentativasRearquivamento">
            <summary>
            Número máximo de tentativas de re-arquivamento
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Configuration.TipoTenantEnum">
            <summary>
            Enumeração dos tipos de tenant (farmácias) brasileiros
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Archived.ClienteArquivado">
            <summary>
            Entidade para armazenar clientes arquivados com mais de 10 anos
            Tabela: clientes_log - mantém histórico para compliance LGPD e comercial
            </summary>
            <remarks>
            Clientes são arquivados após 10 anos considerando LGPD e relacionamento comercial.
            Preserva dados para auditoria enquanto respeita direitos de privacidade
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.CpfCnpj">
            <summary>
            CPF/CNPJ do cliente (para consultas de auditoria)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.Nome">
            <summary>
            Nome do cliente no momento do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.Email">
            <summary>
            Email principal do cliente (para contato se necessário)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.DataCadastro">
            <summary>
            Data do cadastro original do cliente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.DataUltimaCompra">
            <summary>
            Data da última compra realizada
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.ValorTotalCompras">
            <summary>
            Valor total de compras históricas (para análise comercial)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.TotalCompras">
            <summary>
            Número total de compras realizadas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.UtilizavaMedicamentosControlados">
            <summary>
            Indica se cliente utilizava medicamentos controlados
            Importante para histórico farmacêutico
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.StatusCliente">
            <summary>
            Status do cliente no momento do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.MotivoInativacao">
            <summary>
            Motivo da inativação/exclusão do cliente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.DataNascimento">
            <summary>
            Data de nascimento (para análise demográfica anonimizada)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.Estado">
            <summary>
            Estado onde residia (análise regional)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.ClienteArquivado.Cidade">
            <summary>
            Cidade onde residia (análise regional)
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Archived.FornecedorArquivado">
            <summary>
            Entidade para armazenar fornecedores arquivados com mais de 5 anos
            Tabela: fornecedores_log - mantém histórico para auditoria comercial e fiscal
            </summary>
            <remarks>
            Fornecedores são arquivados após 5 anos de inatividade.
            Preserva histórico para auditorias fiscais e análise comercial
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.Cnpj">
            <summary>
            CNPJ do fornecedor (para consultas fiscais)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.RazaoSocial">
            <summary>
            Razão social do fornecedor
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.NomeFantasia">
            <summary>
            Nome fantasia do fornecedor
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.DataCadastro">
            <summary>
            Data do cadastro original do fornecedor
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.DataUltimaCompra">
            <summary>
            Data da última compra realizada com o fornecedor
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.ValorTotalCompras">
            <summary>
            Valor total de compras históricas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.TotalPedidos">
            <summary>
            Número total de pedidos realizados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.ForneciaControlados">
            <summary>
            Indica se fornecia medicamentos controlados
            Importante para auditoria ANVISA
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.StatusFornecedor">
            <summary>
            Status do fornecedor no momento do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.MotivoInativacao">
            <summary>
            Motivo da inativação do fornecedor
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.Estado">
            <summary>
            Estado do fornecedor (análise regional)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.Cidade">
            <summary>
            Cidade do fornecedor (análise regional)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.Telefone">
            <summary>
            Telefone principal para contato se necessário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.Email">
            <summary>
            Email principal para contato se necessário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.FornecedorArquivado.AvaliacaoMedia">
            <summary>
            Avaliação média do fornecedor (1-5)
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada">
            <summary>
            Entidade para armazenar movimentações de estoque arquivadas com mais de 5 anos
            Tabela: estoque_movimentacoes_log - mantém histórico para auditoria farmacêutica
            </summary>
            <remarks>
            Movimentações são arquivadas após 5 anos conforme padrão farmacêutico brasileiro.
            Preserva histórico completo para auditorias ANVISA e controle de lotes
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.DataMovimentacao">
            <summary>
            Data da movimentação (extraída dos dados originais para facilitar consultas)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.ProdutoId">
            <summary>
            ID do produto movimentado (para rastreamento histórico)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.NomeProduto">
            <summary>
            Nome do produto no momento da movimentação (preserva nome histórico)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.TipoMovimentacao">
            <summary>
            Tipo da movimentação (ENTRADA/SAIDA/TRANSFERENCIA/AJUSTE)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.Quantidade">
            <summary>
            Quantidade movimentada
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.SaldoAnterior">
            <summary>
            Saldo anterior à movimentação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.SaldoAtual">
            <summary>
            Saldo após a movimentação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.Lote">
            <summary>
            Lote do produto (importante para rastreabilidade farmacêutica)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.DataValidade">
            <summary>
            Data de validade do lote (auditoria ANVISA)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.EraControlado">
            <summary>
            Indica se era medicamento controlado no momento da movimentação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.ClassificacaoAnvisa">
            <summary>
            Classificação ANVISA no momento da movimentação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.UsuarioMovimentacaoId">
            <summary>
            ID do usuário que executou a movimentação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.MovimentacaoEstoqueArquivada.NomeUsuario">
            <summary>
            Nome do usuário no momento da movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Archived.VendaArquivada">
            <summary>
            Entidade para armazenar vendas arquivadas com mais de 7 anos
            Tabela: vendas_log - mantém histórico para compliance fiscal brasileiro
            </summary>
            <remarks>
            Vendas são arquivadas após 7 anos conforme regulamentação fiscal brasileira.
            Mantém todos os dados originais para auditoria e compliance tributário
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.VendaArquivada.DataVenda">
            <summary>
            Data original da venda (extraída dos dados originais para facilitar consultas)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.VendaArquivada.ValorTotal">
            <summary>
            Valor total da venda (extraído dos dados originais para facilitar consultas)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.VendaArquivada.CpfCnpjCliente">
            <summary>
            CPF/CNPJ do cliente (extraído para consultas de auditoria fiscal)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.VendaArquivada.ContinhaMedicamentosControlados">
            <summary>
            Indica se a venda continha medicamentos controlados
            Importante para auditoria ANVISA
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.VendaArquivada.NumeroNotaFiscal">
            <summary>
            Número da nota fiscal da venda (para rastreamento fiscal)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Archived.VendaArquivada.SerieNotaFiscal">
            <summary>
            Série da nota fiscal (compliance fiscal)
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Base.ArchivedEntity">
            <summary>
            Entidade base para tabelas de arquivo (_log) no sistema farmacêutico brasileiro
            Contém metadados adicionais para auditoria histórica e compliance ANVISA
            </summary>
            <remarks>
            Esta classe base é utilizada para todas as tabelas _log que armazenam
            dados arquivados automaticamente após período de retenção farmacêutica
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.Id">
            <summary>
            Identificador único do registro arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.OriginalId">
            <summary>
            ID original da entidade na tabela principal
            Permite rastreamento e referência ao dado original
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.DadosOriginais">
            <summary>
            Dados completos da entidade em JSON para preservação total
            Garante que nenhuma informação seja perdida no arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.DataDelecao">
            <summary>
            Data que o registro foi deletado (soft delete) originalmente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.DataArquivamento">
            <summary>
            Data que o registro foi arquivado para esta tabela _log
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.TenantId">
            <summary>
            Tenant (farmácia) que possuía os dados para auditoria
            Mantém isolamento mesmo nos dados arquivados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.UsuarioDeletou">
            <summary>
            Usuário que executou o soft delete original
            Para auditoria e rastreabilidade farmacêutica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.MotivoArquivamento">
            <summary>
            Motivo do arquivamento automático para compliance
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.HashIntegridade">
            <summary>
            Hash MD5 dos dados para verificação de integridade
            Detecta corrupção de dados ao longo do tempo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.VersaoSistema">
            <summary>
            Versão do sistema no momento do arquivamento
            Para compatibilidade futura de restauração
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.ArchivedEntity.Observacoes">
            <summary>
            Observações adicionais sobre o arquivamento
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Base.ArchivedEntity.DefinirDadosOriginais(System.Object)">
            <summary>
            Define os dados originais e calcula automaticamente o hash de integridade
            </summary>
            <param name="dadosOriginais">Objeto a ser serializado</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.Base.ArchivedEntity.VerificarIntegridade">
            <summary>
            Verifica se os dados mantiveram sua integridade
            Compara hash atual com hash armazenado
            </summary>
            <returns>True se dados estão íntegros</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Base.ArchivedEntity.RecuperarDadosOriginais``1">
            <summary>
            Desserializa os dados originais para o tipo especificado
            </summary>
            <typeparam name="T">Tipo da entidade original</typeparam>
            <returns>Objeto desserializado ou null se houver erro</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Base.ArchivedEntity.CalcularHashMD5(System.String)">
            <summary>
            Calcula hash MD5 para verificação de integridade dos dados
            </summary>
            <param name="dados">String dos dados a serem calculados</param>
            <returns>Hash MD5 em hexadecimal</returns>
        </member>
        <member name="T:CoreApp.Domain.Entities.Base.BaseEntity">
            <summary>
            Classe base para todas as entidades do sistema
            Fornece propriedades comuns de auditoria e controle
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.BaseEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.BaseEntity.DataCriacao">
            <summary>
            Data de criação da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.BaseEntity.DataAtualizacao">
            <summary>
            Data da última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.BaseEntity.UsuarioCriacao">
            <summary>
            Identificador do usuário que criou a entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.BaseEntity.UsuarioAtualizacao">
            <summary>
            Identificador do usuário que fez a última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Base.BaseEntity.RowVersion">
            <summary>
            Versão da entidade para controle de concorrência otimística
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Base.BaseEntity.UpdateAuditFields(System.String,System.Boolean)">
            <summary>
            Atualiza os campos de auditoria antes de salvar
            </summary>
            <param name="usuarioId">ID do usuário que está fazendo a operação</param>
            <param name="isUpdate">Se é uma operação de update (true) ou create (false)</param>
        </member>
        <member name="T:CoreApp.Domain.Entities.CategoriaEntity">
            <summary>
            Entidade Categoria para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.Nome">
            <summary>
            Nome/descrição principal da Categoria
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.CategoriaEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.CategoriaEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.CategoriaEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.CategoriaEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.ClienteEntity">
            <summary>
            Entidade Cliente do sistema CoreApp
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Common.IArchivableEntity">
            <summary>
            Interface para entidades que podem ser arquivadas para otimização de performance
            Permite arquivamento automático de dados antigos conforme políticas de retenção
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.IArchivableEntity.Arquivado">
            <summary>
            Indica se a entidade foi arquivada
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.IArchivableEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.IArchivableEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/atividade da entidade
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Common.IArchivableEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Common.IBaseEntity">
            <summary>
            Interface base para todas as entidades do sistema CoreApp
            Garante que todas as entidades tenham identificador único
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.IBaseEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Common.ISoftDeletableEntity">
            <summary>
            Interface para entidades que suportam exclusão lógica (soft delete)
            Permite manter dados para auditoria e compliance comercial
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.ISoftDeletableEntity.Excluido">
            <summary>
            Indica se a entidade foi excluída logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.ISoftDeletableEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.ISoftDeletableEntity.UsuarioExclusao">
            <summary>
            Usuário responsável pela exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.ISoftDeletableEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão para auditoria
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Common.ISoftDeletableEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca a entidade como excluída logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.Common.ISoftDeletableEntity.Restore">
            <summary>
            Restaura uma entidade excluída logicamente
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Common.ITenantEntity">
            <summary>
            Interface para entidades que pertencem a um tenant específico
            Garante isolamento de dados entre diferentes comércios/lojas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Common.ITenantEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) ao qual a entidade pertence
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity">
            <summary>
            Entidade de configuração para classificações ANVISA de medicamentos controlados
            Contém apenas as listas que EXIGEM controle especial (A1-A3, B1-B2, C1-C5)
            </summary>
            <remarks>
            Esta entidade cadastra APENAS as classificações que aparecem nas listas oficiais da ANVISA.
            Produtos que não estão em nenhuma lista são considerados "isentos" por padrão.
            
            A ANVISA define diferentes tipos de receita baseados na classificação:
            - Lista A (A1, A2, A3): Receita azul (psicotrópicos/entorpecentes)
            - Lista B (B1, B2): Receita branca (psicotrópicos/anorexígenos) 
            - Lista C (C1-C5): Receita branca ou branca 2 vias (outras substâncias controladas)
            
            Sistema hierárquico permite:
            - Configurações globais do sistema (ANVISA oficial)
            - Customizações específicas por farmácia (quando permitido)
            - Alterações sem necessidade de deploy
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Id">
            <summary>
            Identificador único da classificação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.TenantId">
            <summary>
            Identificador do tenant (null = configuração global ANVISA)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Codigo">
            <summary>
            Código da lista ANVISA (A1, A2, A3, B1, B2, C1, C2, C3, C4, C5)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Nome">
            <summary>
            Nome descritivo da classificação
            </summary>
            <example>Lista A1 - Entorpecentes, Lista B1 - Psicotrópicos</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Descricao">
            <summary>
            Descrição detalhada da classificação e suas implicações
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.TipoReceita">
            <summary>
            Tipo de receita exigida para medicamentos desta classificação
            </summary>
            <example>AZUL, BRANCA, BRANCA_2VIAS</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.CorReceita">
            <summary>
            Cor da receita em formato hexadecimal
            </summary>
            <example>#0000FF (azul), #FFFFFF (branco)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.RequerRetencaoReceita">
            <summary>
            Se a receita deve ser retida pela farmácia
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.DiasValidadeReceita">
            <summary>
            Prazo de validade da receita em dias
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.QuantidadeMaximaPorReceita">
            <summary>
            Quantidade máxima que pode ser dispensada por receita
            </summary>
            <remarks>
            null = sem limite específico, segue regras gerais da classificação
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.RequerAutorizacaoEspecial">
            <summary>
            Se requer autorização especial ou notificação para dispensação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ReportarSNGPC">
            <summary>
            Se deve ser reportado no Sistema Nacional de Gerenciamento de Produtos Controlados (SNGPC)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Categoria">
            <summary>
            Categoria da classificação para agrupamento
            </summary>
            <example>ENTORPECENTE, PSICOTROPICO, IMUNOSSUPRESSOR</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Icone">
            <summary>
            Ícone para exibição na interface (Font Awesome, Material Icons, etc.)
            </summary>
            <example>fa-prescription-bottle, fa-shield-alt</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.CorDestaque">
            <summary>
            Cor de destaque para exibição na interface
            </summary>
            <example>#dc3545 (vermelho para controlados), #fd7e14 (laranja)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Ordem">
            <summary>
            Ordem de exibição em listas (menor número aparece primeiro)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.NivelPermissaoMinimo">
            <summary>
            Nível de permissão mínimo para dispensar medicamentos desta classificação
            </summary>
            <example>FARMACEUTICO, FARMACEUTICO_RESPONSAVEL</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.RegrasValidacao">
            <summary>
            Regras específicas de validação em formato JSON
            </summary>
            <example>{"requer_rg_comprador": true, "idade_minima": 18}</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Observacoes">
            <summary>
            Observações específicas para a classificação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.Ativo">
            <summary>
            Status ativo/inativo (permite desativar sem perder histórico)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.IsOficialAnvisa">
            <summary>
            Indica se é uma configuração oficial da ANVISA (não pode ser removida)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ConfiguracaoAnvisaOficialId">
            <summary>
            ID da configuração ANVISA oficial pai (para customizações por tenant)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.DataCriacao">
            <summary>
            Data de criação do registro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.DataAtualizacao">
            <summary>
            Data da última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.CriadoPor">
            <summary>
            Usuário responsável pela criação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.AtualizadoPor">
            <summary>
            Usuário responsável pela última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ConfiguracaoAnvisaOficial">
            <summary>
            Configuração ANVISA oficial pai (para customizações)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ConfiguracoesPersonalizadas">
            <summary>
            Configurações personalizadas que herdam desta
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.IsGlobal">
            <summary>
            Verifica se é uma configuração global da ANVISA
            </summary>
            <returns>True se for global</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.PodeSerRemovido">
            <summary>
            Verifica se pode ser removido (não é oficial ANVISA e não tem produtos associados)
            </summary>
            <returns>True se pode ser removido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ObterTipoReceitaFormatado">
            <summary>
            Obtém o tipo de receita com formatação para exibição
            </summary>
            <returns>Tipo de receita formatado</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.IsListaA">
            <summary>
            Verifica se a classificação é da Lista A (entorpecentes/psicotrópicos)
            </summary>
            <returns>True se é Lista A</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.IsListaB">
            <summary>
            Verifica se a classificação é da Lista B (psicotrópicos/anorexígenos)
            </summary>
            <returns>True se é Lista B</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.IsListaC">
            <summary>
            Verifica se a classificação é da Lista C (outras substâncias controladas)
            </summary>
            <returns>True se é Lista C</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ObterCorReceitaPadrao">
            <summary>
            Obtém a cor da receita baseada no tipo
            </summary>
            <returns>Código da cor hexadecimal</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ObterCorDestaquePadrao">
            <summary>
            Obtém a cor de destaque baseada na classificação
            </summary>
            <returns>Código da cor hexadecimal</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ValidarQuantidade(System.Decimal)">
            <summary>
            Valida se uma quantidade está dentro do limite permitido
            </summary>
            <param name="quantidade">Quantidade a ser validada</param>
            <returns>True se quantidade é válida</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.ReceitaValida(System.DateTime)">
            <summary>
            Verifica se uma receita ainda está válida baseada na data de emissão
            </summary>
            <param name="dataEmissao">Data de emissão da receita</param>
            <returns>True se receita ainda está válida</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.AtualizarTimestamp">
            <summary>
            Atualiza o timestamp de modificação
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.CriarPersonalizacao(System.String)">
            <summary>
            Cria uma personalização desta classificação para um tenant específico
            </summary>
            <param name="tenantId">ID do tenant de destino</param>
            <returns>Nova configuração personalizada</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity.CriarClassificacaoOficial(System.String,System.String,System.String)">
            <summary>
            Cria nova classificação ANVISA controlada
            </summary>
            <param name="codigo">Código da lista (A1, B1, C1, etc.)</param>
            <param name="nome">Nome descritivo</param>
            <param name="tipoReceita">Tipo de receita necessária</param>
            <returns>Nova instância de classificação</returns>
        </member>
        <member name="T:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity">
            <summary>
            Entidade de configuração para formas de pagamento farmacêuticas brasileiras
            Permite configurar métodos de pagamento específicos por farmácia
            </summary>
            <remarks>
            Esta entidade substitui o enum FormaPagamento por um sistema flexível que permite:
            - Configurações globais do sistema (PIX, cartão, dinheiro, etc.)
            - Customizações específicas por farmácia (convênios locais, crediário próprio)
            - Integração com gateways de pagamento brasileiros
            - Taxas e parcelamentos customizáveis
            - Alterações sem necessidade de deploy
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Id">
            <summary>
            Identificador único da forma de pagamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.TenantId">
            <summary>
            Identificador do tenant (null = configuração global do sistema)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Codigo">
            <summary>
            Código único da forma de pagamento (usado na API e integrações)
            </summary>
            <example>PIX, DINHEIRO, DEBITO, CREDITO_VISTA, CREDITO_PARCELADO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Nome">
            <summary>
            Nome descritivo exibido na interface
            </summary>
            <example>PIX, Dinheiro, Cartão de Débito, Cartão de Crédito à Vista</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Descricao">
            <summary>
            Descrição detalhada da forma de pagamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Categoria">
            <summary>
            Categoria da forma de pagamento para agrupamento
            </summary>
            <example>DIGITAL, FISICO, CARTAO, CONVENIO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.TipoPagamento">
            <summary>
            Tipo de pagamento para processamento
            </summary>
            <example>INSTANTANEO, PARCELADO, A_PRAZO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Cor">
            <summary>
            Cor hexadecimal para exibição na interface
            </summary>
            <example>#00BC9A (verde PIX), #FFD700 (amarelo cartão), #28A745 (verde dinheiro)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Icone">
            <summary>
            Ícone para exibição na interface (Font Awesome, Material Icons, etc.)
            </summary>
            <example>fa-pix, fa-money-bill, fa-credit-card</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Ordem">
            <summary>
            Ordem de exibição em listas (menor número aparece primeiro)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.PermiteParcelamento">
            <summary>
            Se permite parcelamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.MaximoParcelas">
            <summary>
            Número máximo de parcelas permitidas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ValorMinimoParcelamento">
            <summary>
            Valor mínimo para parcelamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.TaxaJurosMensal">
            <summary>
            Taxa de juros mensal para parcelamento (%)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.TaxaFixa">
            <summary>
            Taxa fixa cobrada por transação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.TaxaPercentual">
            <summary>
            Taxa percentual cobrada por transação (%)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.PermiteDesconto">
            <summary>
            Se permite desconto para esta forma de pagamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.PercentualDesconto">
            <summary>
            Percentual de desconto padrão (%)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.PermiteTroco">
            <summary>
            Se permite troco (para pagamentos em dinheiro)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.RequerComprovante">
            <summary>
            Se requer comprovante obrigatório
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.RequerAutenticacao">
            <summary>
            Se requer autenticação adicional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.GatewayPagamento">
            <summary>
            Gateway de pagamento utilizado (quando aplicável)
            </summary>
            <example>MERCADOPAGO, PAGSEGURO, STONE, CIELO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ConfiguracaoGateway">
            <summary>
            Configurações específicas do gateway em formato JSON
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.PrazoCompensacao">
            <summary>
            Prazo médio para compensação em dias
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Ativo">
            <summary>
            Se está ativo para uso
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.DisponivelPDV">
            <summary>
            Se deve aparecer no PDV/caixa
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.DisponivelOnline">
            <summary>
            Se está disponível para vendas online
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.HorarioInicio">
            <summary>
            Horário de início para disponibilidade (formato HH:mm)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.HorarioFim">
            <summary>
            Horário de fim para disponibilidade (formato HH:mm)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ValorMinimo">
            <summary>
            Valor mínimo para aceitar esta forma de pagamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ValorMaximo">
            <summary>
            Valor máximo para aceitar esta forma de pagamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.Observacoes">
            <summary>
            Observações específicas para a forma de pagamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.IsSistema">
            <summary>
            Indica se é uma configuração padrão do sistema (não pode ser removida)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ConfiguracaoGlobalId">
            <summary>
            ID da configuração global pai (para herança)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.DataCriacao">
            <summary>
            Data de criação do registro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.DataAtualizacao">
            <summary>
            Data da última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.CriadoPor">
            <summary>
            Usuário responsável pela criação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.AtualizadoPor">
            <summary>
            Usuário responsável pela última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ConfiguracaoGlobal">
            <summary>
            Configuração global pai (para herança de configurações)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ConfiguracoesFilhas">
            <summary>
            Configurações filhas que herdam desta
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.IsGlobal">
            <summary>
            Verifica se é uma configuração global (sistema)
            </summary>
            <returns>True se for global</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.PodeSerRemovido">
            <summary>
            Verifica se pode ser removido (não é sistema)
            </summary>
            <returns>True se pode ser removido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.EstaDisponivelAgora">
            <summary>
            Verifica se está disponível no horário atual
            </summary>
            <returns>True se está disponível</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ValidarValor(System.Decimal)">
            <summary>
            Verifica se o valor está dentro dos limites permitidos
            </summary>
            <param name="valor">Valor a ser verificado</param>
            <returns>True se valor é válido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.CalcularTaxas(System.Decimal)">
            <summary>
            Calcula o valor das taxas para uma transação
            </summary>
            <param name="valor">Valor da transação</param>
            <returns>Valor total das taxas</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.CalcularDesconto(System.Decimal)">
            <summary>
            Calcula o desconto aplicável
            </summary>
            <param name="valor">Valor da transação</param>
            <returns>Valor do desconto</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.CalcularValorLiquido(System.Decimal)">
            <summary>
            Calcula o valor líquido após taxas e descontos
            </summary>
            <param name="valorBruto">Valor bruto da transação</param>
            <returns>Valor líquido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ObterCorPadrao">
            <summary>
            Obtém a cor padrão baseada no código da forma de pagamento
            </summary>
            <returns>Código da cor hexadecimal</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.ObterIconePadrao">
            <summary>
            Obtém o ícone padrão baseado no código da forma de pagamento
            </summary>
            <returns>Classe do ícone</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.IsPagamentoDigital">
            <summary>
            Verifica se é pagamento digital (não físico)
            </summary>
            <returns>True se é digital</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.AtualizarTimestamp">
            <summary>
            Atualiza o timestamp de modificação
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.CriarPersonalizacao(System.String)">
            <summary>
            Cria uma cópia desta configuração para um tenant específico
            </summary>
            <param name="tenantId">ID do tenant de destino</param>
            <returns>Nova configuração personalizada</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity.CriarFormaPagamentoPadrao(System.String,System.String,System.String)">
            <summary>
            Cria nova forma de pagamento padrão brasileira
            </summary>
            <param name="codigo">Código da forma de pagamento</param>
            <param name="nome">Nome descritivo</param>
            <param name="categoria">Categoria</param>
            <returns>Nova instância de forma de pagamento</returns>
        </member>
        <member name="T:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity">
            <summary>
            Entidade de configuração para status de estoque farmacêutico
            Permite configurar diferentes níveis de alerta de estoque por farmácia
            </summary>
            <remarks>
            Esta entidade substitui o enum StatusEstoque por um sistema flexível que permite:
            - Configurações globais do sistema (padrões brasileiros)
            - Customizações específicas por farmácia
            - Alertas personalizados baseados em percentuais ou quantidades
            - Cores e ícones customizáveis para interface
            - Alterações sem necessidade de deploy
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Id">
            <summary>
            Identificador único do status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.TenantId">
            <summary>
            Identificador do tenant (null = configuração global do sistema)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Codigo">
            <summary>
            Código único do status (usado na API e integrações)
            </summary>
            <example>NORMAL, BAIXO, CRITICO, ZERADO, EXCESSIVO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Nome">
            <summary>
            Nome descritivo exibido na interface
            </summary>
            <example>Estoque Normal, Estoque Baixo, Estoque Crítico</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Descricao">
            <summary>
            Descrição detalhada do status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Categoria">
            <summary>
            Categoria do status para agrupamento
            </summary>
            <example>OPERACIONAL, ALERTA, CRITICO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Cor">
            <summary>
            Cor hexadecimal para exibição na interface
            </summary>
            <example>#28a745 (verde normal), #ffc107 (amarelo baixo), #dc3545 (vermelho crítico)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Icone">
            <summary>
            Ícone para exibição na interface (Font Awesome, Material Icons, etc.)
            </summary>
            <example>fa-check-circle, fa-exclamation-triangle, fa-times-circle</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Ordem">
            <summary>
            Ordem de exibição em listas (menor número aparece primeiro)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.PercentualMinimo">
            <summary>
            Percentual mínimo para este status (relacionado ao estoque mínimo)
            </summary>
            <example>100 (normal), 50 (baixo), 10 (crítico), 0 (zerado)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.PercentualMaximo">
            <summary>
            Percentual máximo para este status
            </summary>
            <example>null (normal), 100 (baixo), 50 (crítico)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.GerarAlerta">
            <summary>
            Se deve gerar alerta automático
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.PrioridadeAlerta">
            <summary>
            Prioridade do alerta (1 = mais alta, 5 = mais baixa)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.NotificarEmail">
            <summary>
            Se deve enviar notificação por email
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.NotificarWhatsApp">
            <summary>
            Se deve enviar notificação por WhatsApp
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.BloquearVendas">
            <summary>
            Se deve bloquear vendas neste status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.MensagemAlerta">
            <summary>
            Mensagem de alerta customizada
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.AcaoRecomendada">
            <summary>
            Ação recomendada para este status
            </summary>
            <example>Repor estoque, Fazer pedido urgente, Suspender vendas</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.Ativo">
            <summary>
            Status ativo/inativo (permite desativar sem perder histórico)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.IsSistema">
            <summary>
            Indica se é uma configuração padrão do sistema (não pode ser removida)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.ConfiguracaoGlobalId">
            <summary>
            ID da configuração global pai (para herança)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.DataCriacao">
            <summary>
            Data de criação do registro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.DataAtualizacao">
            <summary>
            Data da última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.CriadoPor">
            <summary>
            Usuário responsável pela criação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.AtualizadoPor">
            <summary>
            Usuário responsável pela última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.ConfiguracaoGlobal">
            <summary>
            Configuração global pai (para herança de configurações)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.ConfiguracoesFilhas">
            <summary>
            Configurações filhas que herdam desta
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.IsGlobal">
            <summary>
            Verifica se é uma configuração global (sistema)
            </summary>
            <returns>True se for global</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.PodeSerRemovido">
            <summary>
            Verifica se pode ser removido (não é sistema)
            </summary>
            <returns>True se pode ser removido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.AplicaStatus(System.Decimal,System.Decimal)">
            <summary>
            Calcula o status baseado na quantidade atual e estoque mínimo
            </summary>
            <param name="quantidadeAtual">Quantidade atual em estoque</param>
            <param name="estoqueMinimo">Estoque mínimo configurado</param>
            <returns>True se a quantidade se enquadra neste status</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.ObterCorPadrao">
            <summary>
            Obtém a cor padrão baseada no código do status
            </summary>
            <returns>Código da cor hexadecimal</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.ObterIconePadrao">
            <summary>
            Obtém o ícone padrão baseado no código do status
            </summary>
            <returns>Classe do ícone</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.ObterMensagemAlertaPadrao">
            <summary>
            Obtém mensagem de alerta padrão
            </summary>
            <returns>Mensagem de alerta</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.AtualizarTimestamp">
            <summary>
            Atualiza o timestamp de modificação
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.CriarPersonalizacao(System.String)">
            <summary>
            Cria uma cópia desta configuração para um tenant específico
            </summary>
            <param name="tenantId">ID do tenant de destino</param>
            <returns>Nova configuração personalizada</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity.CriarStatusPadrao(System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Cria novo status de estoque padrão
            </summary>
            <param name="codigo">Código do status</param>
            <param name="nome">Nome descritivo</param>
            <param name="percentualMin">Percentual mínimo</param>
            <param name="percentualMax">Percentual máximo</param>
            <returns>Nova instância de status</returns>
        </member>
        <member name="T:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity">
            <summary>
            Entidade de configuração para status de pagamento farmacêutico
            Permite configurar diferentes estados de pagamento por farmácia
            </summary>
            <remarks>
            Esta entidade substitui o enum StatusPagamento por um sistema flexível que permite:
            - Configurações globais do sistema (padrões brasileiros)
            - Customizações específicas por farmácia
            - Integração com gateways de pagamento nacionais
            - Cores e ícones customizáveis para interface
            - Alterações sem necessidade de deploy
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Id">
            <summary>
            Identificador único do status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.TenantId">
            <summary>
            Identificador do tenant (null = configuração global do sistema)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Codigo">
            <summary>
            Código único do status (usado na API e integrações)
            </summary>
            <example>PENDENTE, PAGO, CANCELADO, PROCESSANDO, REJEITADO, PARCIAL</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Nome">
            <summary>
            Nome descritivo exibido na interface
            </summary>
            <example>Pagamento Pendente, Pago, Cancelado, Em Processamento</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Descricao">
            <summary>
            Descrição detalhada do status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Categoria">
            <summary>
            Categoria do status para agrupamento
            </summary>
            <example>PENDENTE, FINALIZADO, ERRO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Cor">
            <summary>
            Cor hexadecimal para exibição na interface
            </summary>
            <example>#ffc107 (amarelo pendente), #28a745 (verde pago), #dc3545 (vermelho cancelado)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Icone">
            <summary>
            Ícone para exibição na interface (Font Awesome, Material Icons, etc.)
            </summary>
            <example>fa-clock, fa-check-circle, fa-times-circle, fa-spinner</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Ordem">
            <summary>
            Ordem de exibição em listas (menor número aparece primeiro)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.IsStatusFinal">
            <summary>
            Se é um status final (não pode mudar para outro status)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.PermiteCancelamento">
            <summary>
            Se permite cancelamento a partir deste status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.PermiteEstorno">
            <summary>
            Se permite estorno a partir deste status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.GerarComprovante">
            <summary>
            Se deve gerar comprovante automático
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.EnviarNotificacao">
            <summary>
            Se deve enviar notificação automática
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.LiberarProdutos">
            <summary>
            Se deve liberar produtos/serviços
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.AtualizarEstoque">
            <summary>
            Se deve atualizar estoque automaticamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.TempoLimiteMinutos">
            <summary>
            Tempo limite em minutos para ficar neste status
            </summary>
            <remarks>
            Usado para pagamentos que têm tempo limite (PIX, boleto, etc.)
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.StatusAposTimeout">
            <summary>
            Status para o qual deve transicionar automaticamente após timeout
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.MensagemPadrao">
            <summary>
            Mensagem padrão para este status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ProximosStatusValidos">
            <summary>
            Próximos status válidos (transições permitidas)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.AparecerRelatorios">
            <summary>
            Se deve aparecer nos relatórios financeiros
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.Ativo">
            <summary>
            Status ativo/inativo (permite desativar sem perder histórico)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.IsSistema">
            <summary>
            Indica se é uma configuração padrão do sistema (não pode ser removida)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ConfiguracaoGlobalId">
            <summary>
            ID da configuração global pai (para herança)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.DataCriacao">
            <summary>
            Data de criação do registro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.DataAtualizacao">
            <summary>
            Data da última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.CriadoPor">
            <summary>
            Usuário responsável pela criação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.AtualizadoPor">
            <summary>
            Usuário responsável pela última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ConfiguracaoGlobal">
            <summary>
            Configuração global pai (para herança de configurações)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ConfiguracoesFilhas">
            <summary>
            Configurações filhas que herdam desta
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.IsGlobal">
            <summary>
            Verifica se é uma configuração global (sistema)
            </summary>
            <returns>True se for global</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.PodeSerRemovido">
            <summary>
            Verifica se pode ser removido (não é sistema)
            </summary>
            <returns>True se pode ser removido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.PodeTransicionarPara(System.String)">
            <summary>
            Verifica se pode transicionar para outro status
            </summary>
            <param name="novoStatus">Código do novo status</param>
            <returns>True se transição é permitida</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.StatusExpirou(System.DateTime)">
            <summary>
            Verifica se o status expirou baseado no tempo limite
            </summary>
            <param name="dataInicio">Data de início do status</param>
            <returns>True se status expirou</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ObterCorPadrao">
            <summary>
            Obtém a cor padrão baseada no código do status
            </summary>
            <returns>Código da cor hexadecimal</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ObterIconePadrao">
            <summary>
            Obtém o ícone padrão baseado no código do status
            </summary>
            <returns>Classe do ícone</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ObterMensagemPadrao">
            <summary>
            Obtém mensagem padrão baseada no código do status
            </summary>
            <returns>Mensagem padrão</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.ObterProximosStatusValidos">
            <summary>
            Obtém próximos status válidos como lista
            </summary>
            <returns>Lista de códigos de status válidos</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.AtualizarTimestamp">
            <summary>
            Atualiza o timestamp de modificação
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.CriarPersonalizacao(System.String)">
            <summary>
            Cria uma cópia desta configuração para um tenant específico
            </summary>
            <param name="tenantId">ID do tenant de destino</param>
            <returns>Nova configuração personalizada</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity.CriarStatusPadrao(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Cria novo status de pagamento padrão
            </summary>
            <param name="codigo">Código do status</param>
            <param name="nome">Nome descritivo</param>
            <param name="categoria">Categoria</param>
            <param name="isStatusFinal">Se é status final</param>
            <returns>Nova instância de status</returns>
        </member>
        <member name="T:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity">
            <summary>
            Entidade de configuração para status de sincronização offline farmacêutica
            Permite configurar diferentes estados de sincronização por farmácia
            </summary>
            <remarks>
            Esta entidade substitui o enum StatusSincronizacao por um sistema flexível que permite:
            - Configurações globais do sistema (padrões para operação offline)
            - Customizações específicas por farmácia
            - Controle de operações offline do PDV Raspberry Pi
            - Cores e ícones customizáveis para interface
            - Alterações sem necessidade de deploy
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Id">
            <summary>
            Identificador único do status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.TenantId">
            <summary>
            Identificador do tenant (null = configuração global do sistema)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Codigo">
            <summary>
            Código único do status (usado na API e integrações)
            </summary>
            <example>PENDENTE, SINCRONIZADO, ERRO, CONFLITO, SINCRONIZANDO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Nome">
            <summary>
            Nome descritivo exibido na interface
            </summary>
            <example>Pendente Sincronização, Sincronizado, Erro na Sincronização</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Descricao">
            <summary>
            Descrição detalhada do status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Categoria">
            <summary>
            Categoria do status para agrupamento
            </summary>
            <example>PROCESSANDO, FINALIZADO, ERRO</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Cor">
            <summary>
            Cor hexadecimal para exibição na interface
            </summary>
            <example>#ffc107 (amarelo pendente), #28a745 (verde sincronizado), #dc3545 (vermelho erro)</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Icone">
            <summary>
            Ícone para exibição na interface (Font Awesome, Material Icons, etc.)
            </summary>
            <example>fa-clock, fa-sync-alt, fa-exclamation-triangle, fa-times-circle</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Ordem">
            <summary>
            Ordem de exibição em listas (menor número aparece primeiro)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.IsStatusFinal">
            <summary>
            Se é um status final (não pode mudar para outro status)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.PermiteRetry">
            <summary>
            Se permite retry automático
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.MaximoTentativas">
            <summary>
            Número máximo de tentativas de sincronização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.IntervaloTentativasMinutos">
            <summary>
            Intervalo em minutos entre tentativas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.GerarAlerta">
            <summary>
            Se deve gerar alerta para operadores
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.PrioridadeAlerta">
            <summary>
            Prioridade do alerta (1 = mais alta, 5 = mais baixa)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.NotificarAdministradores">
            <summary>
            Se deve notificar administradores
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.BloquearOperacoesOffline">
            <summary>
            Se deve bloquear novas operações offline
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.AparecerDashboard">
            <summary>
            Se deve aparecer no dashboard de monitoramento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.TempoLimiteMinutos">
            <summary>
            Tempo limite em minutos para considerar timeout
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.StatusAposTimeout">
            <summary>
            Status para o qual deve transicionar após timeout
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.MensagemPadrao">
            <summary>
            Mensagem padrão para este status
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ProximosStatusValidos">
            <summary>
            Próximos status válidos (transições permitidas)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.SincronizacaoImediata">
            <summary>
            Se deve sincronizar imediatamente quando possível
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.TiposDadosAplicaveis">
            <summary>
            Tipos de dados que podem estar neste status
            </summary>
            <example>VENDAS, MOVIMENTACOES, PRODUTOS, CLIENTES</example>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.Ativo">
            <summary>
            Status ativo/inativo (permite desativar sem perder histórico)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.IsSistema">
            <summary>
            Indica se é uma configuração padrão do sistema (não pode ser removida)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ConfiguracaoGlobalId">
            <summary>
            ID da configuração global pai (para herança)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.DataCriacao">
            <summary>
            Data de criação do registro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.DataAtualizacao">
            <summary>
            Data da última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.CriadoPor">
            <summary>
            Usuário responsável pela criação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.AtualizadoPor">
            <summary>
            Usuário responsável pela última atualização
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ConfiguracaoGlobal">
            <summary>
            Configuração global pai (para herança de configurações)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ConfiguracoesFilhas">
            <summary>
            Configurações filhas que herdam desta
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.IsGlobal">
            <summary>
            Verifica se é uma configuração global (sistema)
            </summary>
            <returns>True se for global</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.PodeSerRemovido">
            <summary>
            Verifica se pode ser removido (não é sistema)
            </summary>
            <returns>True se pode ser removido</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.PodeTransicionarPara(System.String)">
            <summary>
            Verifica se pode transicionar para outro status
            </summary>
            <param name="novoStatus">Código do novo status</param>
            <returns>True se transição é permitida</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.DeveRetrySync(System.Int32)">
            <summary>
            Verifica se deve tentar sincronização novamente
            </summary>
            <param name="numeroTentativas">Número atual de tentativas</param>
            <returns>True se deve tentar novamente</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.CalcularProximasTentativas(System.DateTime)">
            <summary>
            Calcula próximo horário para retry
            </summary>
            <param name="ultimaTentativa">Horário da última tentativa</param>
            <returns>Horário da próxima tentativa</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.StatusExpirou(System.DateTime)">
            <summary>
            Verifica se o status expirou baseado no tempo limite
            </summary>
            <param name="dataInicio">Data de início do status</param>
            <returns>True se status expirou</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.TipoDadoAplicavel(System.String)">
            <summary>
            Verifica se um tipo de dado é aplicável para este status
            </summary>
            <param name="tipoDado">Tipo de dado a verificar</param>
            <returns>True se é aplicável</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ObterCorPadrao">
            <summary>
            Obtém a cor padrão baseada no código do status
            </summary>
            <returns>Código da cor hexadecimal</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ObterIconePadrao">
            <summary>
            Obtém o ícone padrão baseado no código do status
            </summary>
            <returns>Classe do ícone</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ObterMensagemPadrao">
            <summary>
            Obtém mensagem padrão baseada no código do status
            </summary>
            <returns>Mensagem padrão</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ObterProximosStatusValidos">
            <summary>
            Obtém próximos status válidos como lista
            </summary>
            <returns>Lista de códigos de status válidos</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.ObterTiposDadosAplicaveis">
            <summary>
            Obtém tipos de dados aplicáveis como lista
            </summary>
            <returns>Lista de tipos de dados</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.AtualizarTimestamp">
            <summary>
            Atualiza o timestamp de modificação
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.CriarPersonalizacao(System.String)">
            <summary>
            Cria uma cópia desta configuração para um tenant específico
            </summary>
            <param name="tenantId">ID do tenant de destino</param>
            <returns>Nova configuração personalizada</returns>
        </member>
        <member name="M:CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity.CriarStatusPadrao(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Cria novo status de sincronização padrão
            </summary>
            <param name="codigo">Código do status</param>
            <param name="nome">Nome descritivo</param>
            <param name="categoria">Categoria</param>
            <param name="permiteRetry">Se permite retry</param>
            <returns>Nova instância de status</returns>
        </member>
        <member name="T:CoreApp.Domain.Entities.FormaPagamentoVendaEntity">
            <summary>
            Entidade FormaPagamentoVenda para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Nome">
            <summary>
            Nome/descrição principal da FormaPagamentoVenda
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.FormaPagamentoVendaEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.FornecedorEntity">
            <summary>
            Entidade Fornecedor para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.Nome">
            <summary>
            Nome/descrição principal da Fornecedor
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.FornecedorEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.FornecedorEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.FornecedorEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.FornecedorEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.ItemVendaEntity">
            <summary>
            Entidade ItemVenda para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.Nome">
            <summary>
            Nome/descrição principal da ItemVenda
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.ItemVendaEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.ItemVendaEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ItemVendaEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.ItemVendaEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.LoteEntity">
            <summary>
            Entidade Lote para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.Nome">
            <summary>
            Nome/descrição principal da Lote
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.LoteEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.LoteEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.LoteEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.LoteEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.ModuloEntity">
            <summary>
            Entidade Modulo para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.Nome">
            <summary>
            Nome/descrição principal da Modulo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.ModuloEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.ModuloEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ModuloEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.ModuloEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity">
            <summary>
            Entidade MovimentacaoEstoque para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Nome">
            <summary>
            Nome/descrição principal da MovimentacaoEstoque
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.MovimentacaoEstoqueEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.PlanoComercialEntity">
            <summary>
            Entidade PlanoComercial para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.Nome">
            <summary>
            Nome/descrição principal da PlanoComercial
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PlanoComercialEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.PlanoComercialEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoComercialEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PlanoComercialEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.PlanoModuloEntity">
            <summary>
            Entidade PlanoModulo para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.Nome">
            <summary>
            Nome/descrição principal da PlanoModulo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PlanoModuloEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.PlanoModuloEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PlanoModuloEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PlanoModuloEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.ProdutoEntity">
            <summary>
            Entidade Produto para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.Nome">
            <summary>
            Nome/descrição principal da Produto
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.ProdutoEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.ProdutoEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.ProdutoEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.ProdutoEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.PromocaoCategoriaEntity">
            <summary>
            Entidade PromocaoCategoria para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Nome">
            <summary>
            Nome/descrição principal da PromocaoCategoria
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoCategoriaEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoCategoriaEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoCategoriaEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.PromocaoEntity">
            <summary>
            Entidade Promocao para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.Nome">
            <summary>
            Nome/descrição principal da Promocao
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.PromocaoProdutoEntity">
            <summary>
            Entidade PromocaoProduto para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.Nome">
            <summary>
            Nome/descrição principal da PromocaoProduto
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoProdutoEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoProdutoEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.PromocaoProdutoEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.PromocaoProdutoEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.RelatorioArquivamentoEntity">
            <summary>
            Entidade RelatorioArquivamento para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Nome">
            <summary>
            Nome/descrição principal da RelatorioArquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.RelatorioArquivamentoEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.TenantModuloEntity">
            <summary>
            Entidade TenantModulo para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.Nome">
            <summary>
            Nome/descrição principal da TenantModulo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.TenantModuloEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.TenantModuloEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantModuloEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.TenantModuloEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.TenantPlanoEntity">
            <summary>
            Entidade TenantPlano para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.Nome">
            <summary>
            Nome/descrição principal da TenantPlano
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.TenantPlanoEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.TenantPlanoEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TenantPlanoEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.TenantPlanoEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.TipoMovimentacaoEntity">
            <summary>
            Entidade TipoMovimentacao para sistema CoreApp multi-tenant
            Implementa padrões SOLID e compliance brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Id">
            <summary>
            Identificador único da entidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.TenantId">
            <summary>
            Identificador do tenant (loja/comércio) para isolamento de dados
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Nome">
            <summary>
            Nome/descrição principal da TipoMovimentacao
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Descricao">
            <summary>
            Descrição detalhada opcional
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Ativo">
            <summary>
            Indica se o registro está ativo
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Excluido">
            <summary>
            Indica se o registro foi excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.DataExclusao">
            <summary>
            Data da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.UsuarioExclusao">
            <summary>
            Usuário que executou a exclusão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.TipoMovimentacaoEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca o registro como excluído logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Restore">
            <summary>
            Restaura um registro excluído logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.Arquivado">
            <summary>
            Indica se o registro foi arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.DataArquivamento">
            <summary>
            Data do arquivamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Entities.TipoMovimentacaoEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação/alteração
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Entities.TipoMovimentacaoEntity.AtualizarUltimaMovimentacao">
            <summary>
            Atualiza a data da última movimentação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.UsuarioEntity">
            <summary>
            Entidade Usuario do sistema CoreApp
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Entities.VendaEntity">
            <summary>
            Entidade Venda do sistema CoreApp
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Enums.TipoMovimentacao">
            <summary>
            Tipos de movimentação de estoque para comércios brasileiros
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoMovimentacao.ENTRADA">
            <summary>
            Entrada de produtos no estoque (compras, devoluções de clientes)
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoMovimentacao.SAIDA">
            <summary>
            Saída de produtos do estoque (vendas, devoluções para fornecedores)
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoMovimentacao.AJUSTE">
            <summary>
            Ajuste de estoque (inventário, correções)
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoMovimentacao.PERDA">
            <summary>
            Perda de produtos (quebra, furto, deterioração)
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoMovimentacao.VENCIMENTO">
            <summary>
            Produtos vencidos removidos do estoque
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoMovimentacao.TRANSFERENCIA">
            <summary>
            Transferência entre filiais ou locais
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Enums.TipoUsuario">
            <summary>
            Tipos de usuário para sistema comercial brasileiro
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.ADMINISTRADOR">
            <summary>
            Administrador do sistema com acesso total
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.PROPRIETARIO">
            <summary>
            Proprietário da loja/comércio
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.GERENTE">
            <summary>
            Gerente com permissões de gestão
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.VENDEDOR">
            <summary>
            Vendedor com acesso ao módulo de vendas
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.CAIXA">
            <summary>
            Operador de caixa
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.ESTOQUISTA">
            <summary>
            Operador de estoque
            </summary>
        </member>
        <member name="F:CoreApp.Domain.Enums.TipoUsuario.VISUALIZADOR">
            <summary>
            Usuário com acesso apenas a relatórios
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Common.ITenantContext">
            <summary>
            Interface para contexto de tenant atual
            Fornece informações sobre o tenant ativo na requisição
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.ITenantContext.GetCurrentTenantId">
            <summary>
            Obtém o ID do tenant atual
            </summary>
            <returns>ID do tenant atual</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.ITenantContext.GetCurrentUserId">
            <summary>
            Obtém o ID do usuário atual
            </summary>
            <returns>ID do usuário atual</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.ITenantContext.SetCurrentTenant(System.String)">
            <summary>
            Define o tenant atual
            </summary>
            <param name="tenantId">ID do tenant</param>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.ITenantContext.SetCurrentUser(System.String)">
            <summary>
            Define o usuário atual
            </summary>
            <param name="userId">ID do usuário</param>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.ITenantContext.HasTenant">
            <summary>
            Verifica se há um tenant definido
            </summary>
            <returns>True se há tenant ativo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.ITenantContext.HasUser">
            <summary>
            Verifica se há um usuário definido
            </summary>
            <returns>True se há usuário ativo</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Common.IVerticalEntity">
            <summary>
            Interface para entidades que podem ser estendidas por verticais específicos de negócio
            Permite composição ao invés de herança complexa conforme princípios SOLID
            </summary>
            <remarks>
            Esta interface permite que entidades base sejam especializadas por diferentes verticais
            (Padaria, Farmácia, Supermercado, etc.) sem modificar o código core.
            Exemplo: ProdutoEntity pode ser estendido para ProdutoPadaria, ProdutoFarmacia, etc.
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Common.IVerticalEntity.VerticalType">
            <summary>
            Identificador do vertical de negócio (ex: "PADARIA", "FARMACIA", "SUPERMERCADO")
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Common.IVerticalEntity.VerticalProperties">
            <summary>
            Propriedades específicas do vertical armazenadas como JSON
            Permite extensibilidade sem alterar schema da entidade base
            </summary>
            <example>
            Para ProdutoPadaria: {"temGluten": true, "validadeControlada": false}
            Para ProdutoFarmacia: {"princípioAtivo": "Paracetamol", "dosagem": "500mg"}
            </example>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Common.IVerticalEntity.VerticalConfiguration">
            <summary>
            Configurações específicas do vertical
            Permite definir comportamentos customizados por tipo de negócio
            </summary>
            <example>
            {"validacaoIdadeMinima": 18, "requerReceita": true}
            </example>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Common.IVerticalEntity.VerticalSchemaVersion">
            <summary>
            Versão do schema das propriedades verticais
            Permite evolução das propriedades sem quebrar compatibilidade
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Common.IVerticalEntity.VerticalActive">
            <summary>
            Indica se a entidade está ativa para o vertical específico
            Permite desabilitar funcionalidades por vertical sem afetar outros
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.IVerticalEntity.GetVerticalProperty``1(System.String)">
            <summary>
            Obtém uma propriedade específica do vertical de forma tipada
            </summary>
            <typeparam name="T">Tipo da propriedade</typeparam>
            <param name="propertyName">Nome da propriedade</param>
            <returns>Valor da propriedade ou default(T)</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.IVerticalEntity.SetVerticalProperty``1(System.String,``0)">
            <summary>
            Define uma propriedade específica do vertical
            </summary>
            <typeparam name="T">Tipo da propriedade</typeparam>
            <param name="propertyName">Nome da propriedade</param>
            <param name="value">Valor da propriedade</param>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.IVerticalEntity.IsVerticalConfigEnabled(System.String)">
            <summary>
            Verifica se uma configuração específica está habilitada
            </summary>
            <param name="configName">Nome da configuração</param>
            <returns>True se a configuração está habilitada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Common.IVerticalEntity.ValidateVerticalProperties">
            <summary>
            Valida se as propriedades verticais estão corretas para o tipo de negócio
            </summary>
            <returns>True se as propriedades são válidas</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.IArchivableEntity">
            <summary>
            Interface para entidades que podem ser arquivadas automaticamente
            Dados com soft delete há mais de 5 anos serão movidos para tabelas _log
            Implementa compliance farmacêutico brasileiro e otimização de performance
            </summary>
            <remarks>
            Esta interface é essencial para o sistema de arquivamento automático
            que garante compliance ANVISA mantendo performance das tabelas principais
            </remarks>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.IArchivableEntity.UltimaMovimentacao">
            <summary>
            Data da última movimentação relevante para determinar arquivamento
            Utilizada para calcular quando o registro pode ser arquivado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.IArchivableEntity.Arquivado">
            <summary>
            Indica se o registro já foi arquivado para tabela _log
            Evita arquivamento duplicado e permite rastreamento
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.IArchivableEntity.DataArquivamento">
            <summary>
            Data do arquivamento para auditoria e compliance
            Registra quando o dado foi movido para tabela de arquivo
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IArchivableEntity.AtualizarUltimaMovimentacao">
            <summary>
            Método para atualizar automaticamente a última movimentação
            Deve ser chamado sempre que a entidade for modificada
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.IAuthService">
            <summary>
            Interface para serviços de autenticação multi-tenant farmacêutica brasileira
            Gerencia login, logout, refresh tokens e validações de módulos comerciais
            </summary>
            <remarks>
            Este serviço implementa autenticação específica para farmácias brasileiras,
            considerando isolamento por tenant e validação de módulos pagos
            </remarks>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IAuthService.LoginAsync(CoreApp.Domain.Interfaces.LoginRequest,System.Threading.CancellationToken)">
            <summary>
            Realiza autenticação de usuário no contexto de um tenant específico
            </summary>
            <param name="loginRequest">Dados de login incluindo tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Token JWT e dados do usuário autenticado</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IAuthService.RefreshTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Atualiza token JWT usando refresh token válido
            </summary>
            <param name="refreshToken">Token de renovação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Novo token JWT</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IAuthService.RevokeTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Invalida token de usuário (logout)
            </summary>
            <param name="accessToken">Token JWT a ser invalidado</param>
            <param name="cancellationToken">Token de cancelamento</param>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IAuthService.ValidateTokenAsync(System.String)">
            <summary>
            Valida se token JWT é válido e extrai informações do usuário
            </summary>
            <param name="accessToken">Token JWT a ser validado</param>
            <returns>Dados do usuário se token válido, null caso contrário</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IAuthService.HasModuleAccessAsync(System.String,System.String,System.String)">
            <summary>
            Verifica se usuário tem permissão para acessar módulo comercial específico
            </summary>
            <param name="userId">ID do usuário</param>
            <param name="tenantId">ID do tenant (farmácia)</param>
            <param name="moduleCode">Código do módulo (ex: CUSTOMERS, REPORTS)</param>
            <returns>True se usuário tem acesso ao módulo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.IAuthService.GetUserModulesAsync(System.String,System.String)">
            <summary>
            Obtém todos os módulos disponíveis para o usuário no tenant
            </summary>
            <param name="userId">ID do usuário</param>
            <param name="tenantId">ID do tenant (farmácia)</param>
            <returns>Lista de códigos dos módulos disponíveis</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.LoginRequest">
            <summary>
            Request de login com informações específicas do tenant
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.LoginRequest.EmailOrUsername">
            <summary>
            Email ou username do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.LoginRequest.Password">
            <summary>
            Senha do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.LoginRequest.TenantId">
            <summary>
            ID do tenant (farmácia) - pode vir do subdomain ou header
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.LoginRequest.RememberMe">
            <summary>
            Se deve manter login persistente (Remember Me)
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.AuthResult">
            <summary>
            Resultado da autenticação com tokens e informações do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.AccessToken">
            <summary>
            Token JWT de acesso
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.RefreshToken">
            <summary>
            Token de renovação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.ExpiresIn">
            <summary>
            Tempo de expiração do access token (em segundos)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.TokenType">
            <summary>
            Tipo do token (sempre "Bearer")
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.User">
            <summary>
            Informações do usuário autenticado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.Tenant">
            <summary>
            Informações do tenant (farmácia)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthResult.AvailableModules">
            <summary>
            Módulos comerciais disponíveis para o usuário
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.AuthUserInfo">
            <summary>
            Informações do usuário autenticado
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthUserInfo.Id">
            <summary>
            ID único do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthUserInfo.Name">
            <summary>
            Nome completo do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthUserInfo.Email">
            <summary>
            Email do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthUserInfo.Username">
            <summary>
            Username/login do usuário
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthUserInfo.Roles">
            <summary>
            Roles do usuário no tenant atual
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthUserInfo.Permissions">
            <summary>
            Permissões específicas do usuário
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.AuthTenantInfo">
            <summary>
            Informações do tenant (farmácia) para autenticação
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthTenantInfo.Id">
            <summary>
            ID único do tenant
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthTenantInfo.Name">
            <summary>
            Nome fantasia da farmácia
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthTenantInfo.Document">
            <summary>
            CNPJ da farmácia
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthTenantInfo.Plan">
            <summary>
            Plano comercial ativo (Starter, Professional, Enterprise)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.AuthTenantInfo.IsActive">
            <summary>
            Se o tenant está ativo e pode acessar o sistema
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.JwtConfiguration">
            <summary>
            Configurações específicas de JWT para o sistema farmacêutico brasileiro
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.Secret">
            <summary>
            Chave secreta para assinatura do token (mín. 256 bits)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.Issuer">
            <summary>
            Emissor do token (farmacia.com.br)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.Audience">
            <summary>
            Audiência do token (clientes farmácias)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.ExpirationHours">
            <summary>
            Tempo de expiração do access token em horas
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.RefreshExpirationDays">
            <summary>
            Tempo de expiração do refresh token em dias
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.IncludeModuleClaims">
            <summary>
            Se deve incluir claims de módulos no token
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.JwtConfiguration.IncludeTenantClaims">
            <summary>
            Se deve incluir claims de tenant no token
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.ISoftDeletableEntity">
            <summary>
            Interface para entidades que suportam exclusão lógica (soft delete)
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.ISoftDeletableEntity.IsDeleted">
            <summary>
            Indica se a entidade foi excluída logicamente
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.ISoftDeletableEntity.DataExclusao">
            <summary>
            Data e hora da exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.ISoftDeletableEntity.UsuarioExclusao">
            <summary>
            Usuário que fez a exclusão lógica
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.ISoftDeletableEntity.MotivoExclusao">
            <summary>
            Motivo da exclusão (opcional)
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.ISoftDeletableEntity.MarkAsDeleted(System.String,System.String)">
            <summary>
            Marca a entidade como excluída logicamente
            </summary>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.ISoftDeletableEntity.Restore">
            <summary>
            Restaura a entidade excluída logicamente
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1">
            <summary>
            Interface base para todos os repositórios do sistema CoreApp
            Fornece operações CRUD básicas com suporte multi-tenant
            </summary>
            <typeparam name="T">Tipo da entidade que implementa ITenantEntity</typeparam>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.GetByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém uma entidade por ID considerando o tenant atual
            </summary>
            <param name="id">ID da entidade</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Entidade encontrada ou null</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.GetAllAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Obtém todas as entidades do tenant atual com paginação
            </summary>
            <param name="pageNumber">Número da página (baseado em 1)</param>
            <param name="pageSize">Tamanho da página</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista paginada de entidades</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.CountAsync(System.Threading.CancellationToken)">
            <summary>
            Conta o total de registros do tenant atual
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Total de registros</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Adiciona uma nova entidade
            </summary>
            <param name="entity">Entidade a ser adicionada</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Entidade adicionada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Atualiza uma entidade existente
            </summary>
            <param name="entity">Entidade a ser atualizada</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Entidade atualizada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.DeleteAsync(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove uma entidade por ID (exclusão lógica se implementa ISoftDeletableEntity)
            </summary>
            <param name="id">ID da entidade</param>
            <param name="usuarioId">ID do usuário que está excluindo</param>
            <param name="motivo">Motivo da exclusão</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se removido com sucesso</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.ExistsAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Verifica se existe uma entidade com o ID especificado
            </summary>
            <param name="id">ID da entidade</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se existe</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IBaseRepository`1.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            Salva todas as mudanças pendentes
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Número de entidades afetadas</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.IEstoqueRepository">
            <summary>
            Interface do repositório de movimentações de estoque
            Fornece operações específicas para controle de estoque multi-tenant
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IEstoqueRepository.GetByProdutoIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém todas as movimentações de um produto específico
            </summary>
            <param name="produtoId">ID do produto</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de movimentações do produto</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IEstoqueRepository.GetByTipoAsync(System.Guid,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Obtém movimentações por tipo
            </summary>
            <param name="tipoMovimentacaoId">ID do tipo de movimentação</param>
            <param name="dataInicio">Data de início do filtro</param>
            <param name="dataFim">Data de fim do filtro</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de movimentações filtradas</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IEstoqueRepository.CalcularSaldoAtualAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Calcula o saldo atual de um produto baseado nas movimentações
            </summary>
            <param name="produtoId">ID do produto</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Saldo atual do produto</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IEstoqueRepository.GetUltimasMovimentacoesAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Obtém as últimas movimentações do tenant
            </summary>
            <param name="limite">Número máximo de registros</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Últimas movimentações</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IEstoqueRepository.GetProdutosEstoqueBaixoAsync(System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Obtém produtos com estoque baixo
            </summary>
            <param name="quantidadeMinima">Quantidade mínima para considerar estoque baixo</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de produtos com estoque baixo</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.IModuloRepository">
            <summary>
            Interface do repositório de módulos do sistema
            Fornece operações para gestão de módulos e validação de acesso
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IModuloRepository.GetByCodigoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém módulo por código
            </summary>
            <param name="codigo">Código do módulo (ex: PRODUCTS, SALES)</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Módulo encontrado ou null</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IModuloRepository.GetModulosAtivosAsync(System.Threading.CancellationToken)">
            <summary>
            Obtém todos os módulos ativos
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de módulos ativos</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IModuloRepository.GetByPlanoIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém módulos por plano comercial
            </summary>
            <param name="planoId">ID do plano comercial</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de módulos do plano</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IModuloRepository.ModuloAtivoParaTenantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Verifica se um módulo está ativo para um tenant específico
            </summary>
            <param name="codigoModulo">Código do módulo</param>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se o módulo está ativo para o tenant</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IModuloRepository.GetModulosTenantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém todos os módulos disponíveis para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de módulos do tenant</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.IPlanoComercialRepository">
            <summary>
            Interface do repositório de planos comerciais
            Fornece operações para gestão de planos SAAS
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IPlanoComercialRepository.GetByCodigoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém plano por código
            </summary>
            <param name="codigo">Código do plano (STARTER, PROFESSIONAL, ENTERPRISE)</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Plano encontrado ou null</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IPlanoComercialRepository.GetPlanosAtivosAsync(System.Threading.CancellationToken)">
            <summary>
            Obtém todos os planos ativos
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de planos ativos</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IPlanoComercialRepository.GetPlanosOrdenadosPorPrecoAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Obtém planos ordenados por preço
            </summary>
            <param name="crescente">True para ordem crescente, false para decrescente</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de planos ordenados por preço</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IPlanoComercialRepository.GetModulosPlanoAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém módulos incluídos em um plano
            </summary>
            <param name="planoId">ID do plano</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de módulos do plano</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IPlanoComercialRepository.PlanoIncluiModuloAsync(System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Verifica se um plano inclui um módulo específico
            </summary>
            <param name="planoId">ID do plano</param>
            <param name="codigoModulo">Código do módulo</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se o plano inclui o módulo</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository">
            <summary>
            Interface do repositório de relação tenant-módulo
            Fornece operações para gestão de módulos específicos por tenant
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.GetModulosAtivosTenantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém todos os módulos ativos de um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de módulos ativos do tenant</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.TenantTemAcessoModuloAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Verifica se um tenant tem acesso a um módulo específico
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="codigoModulo">Código do módulo</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se o tenant tem acesso ao módulo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.GetTenantsPorModuloAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Obtém tenants que usam um módulo específico
            </summary>
            <param name="codigoModulo">Código do módulo</param>
            <param name="apenasAtivos">Se deve retornar apenas acessos ativos</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de tenants que usam o módulo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.AtivarModuloTenantAsync(System.String,System.Guid,System.DateTime,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Ativa um módulo para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="moduloId">ID do módulo</param>
            <param name="dataInicio">Data de início do acesso</param>
            <param name="dataFim">Data de fim do acesso (opcional)</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Relação tenant-módulo criada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.DesativarModuloTenantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Desativa um módulo para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="codigoModulo">Código do módulo</param>
            <param name="motivoDesativacao">Motivo da desativação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se desativado com sucesso</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.SincronizarModulosPorPlanoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sincroniza módulos de um tenant baseado no seu plano atual
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de módulos sincronizados</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantModuloRepository.GetEstatisticasUsoModulosAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém estatísticas de uso de módulos por tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Estatísticas de uso dos módulos</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository">
            <summary>
            Interface do repositório de relação tenant-plano
            Fornece operações para gestão de planos contratados por tenant
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.GetPlanoAtivoTenantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém o plano ativo atual de um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Plano ativo do tenant ou null</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.GetHistoricoPlanosTenantAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém histórico de planos de um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de planos do tenant</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.GetTenantsPorPlanoAsync(System.Guid,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Obtém todos os tenants de um plano específico
            </summary>
            <param name="planoId">ID do plano</param>
            <param name="apenasAtivos">Se deve retornar apenas contratos ativos</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de tenants que usam o plano</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.TenantTemPlanoAtivoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Verifica se um tenant tem um plano ativo
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se o tenant tem plano ativo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.GetPlanosProximosVencimentoAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Obtém planos próximos ao vencimento
            </summary>
            <param name="diasAntecedencia">Número de dias de antecedência</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de planos próximos ao vencimento</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.AtivarPlanoTenantAsync(System.String,System.Guid,System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Ativa um plano para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="planoId">ID do plano</param>
            <param name="dataInicio">Data de início do plano</param>
            <param name="dataFim">Data de fim do plano</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Relação tenant-plano criada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.ITenantPlanoRepository.DesativarPlanoTenantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Desativa o plano atual de um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="motivoCancelamento">Motivo do cancelamento</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se desativado com sucesso</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.IVendaRepository">
            <summary>
            Interface do repositório de vendas
            Fornece operações específicas para gestão de vendas multi-tenant
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVendaRepository.GetByPeriodoAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Obtém vendas por período
            </summary>
            <param name="dataInicio">Data de início</param>
            <param name="dataFim">Data de fim</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de vendas no período</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVendaRepository.GetByClienteIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém vendas por cliente
            </summary>
            <param name="clienteId">ID do cliente</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de vendas do cliente</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVendaRepository.GetByVendedorIdAsync(System.Guid,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Obtém vendas por vendedor
            </summary>
            <param name="vendedorId">ID do vendedor</param>
            <param name="dataInicio">Data de início (opcional)</param>
            <param name="dataFim">Data de fim (opcional)</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de vendas do vendedor</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVendaRepository.CalcularTotalVendasPeriodoAsync(System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Calcula o total de vendas em um período
            </summary>
            <param name="dataInicio">Data de início</param>
            <param name="dataFim">Data de fim</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Valor total das vendas</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVendaRepository.GetVendasRecentesAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Obtém as vendas mais recentes
            </summary>
            <param name="limite">Número máximo de registros</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Vendas mais recentes</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVendaRepository.GetItensVendaAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém itens de venda por venda
            </summary>
            <param name="vendaId">ID da venda</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de itens da venda</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1">
            <summary>
            Interface para repositórios especializados em verticais de negócio
            Estende funcionalidades básicas com operações específicas por vertical
            </summary>
            <typeparam name="TEntity">Tipo da entidade que implementa IVerticalEntity e ITenantEntity</typeparam>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.GetByVerticalTypeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém entidades filtradas por tipo de vertical
            </summary>
            <param name="verticalType">Tipo do vertical (ex: "PADARIA", "FARMACIA")</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de entidades do vertical especificado</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.GetByVerticalPropertyAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Obtém entidades por propriedade vertical específica
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="propertyName">Nome da propriedade vertical</param>
            <param name="propertyValue">Valor da propriedade</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de entidades que possuem a propriedade com o valor especificado</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.SearchByVerticalQueryAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Busca entidades usando query específica do vertical
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="verticalQuery">Query específica do vertical em formato JSON</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de entidades que atendem a query</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.GetVerticalAggregationAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém estatísticas agregadas por vertical
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="aggregationType">Tipo de agregação (COUNT, SUM, AVG, etc.)</param>
            <param name="propertyName">Nome da propriedade para agregação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da agregação</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.ValidateVerticalConsistencyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Valida consistência das propriedades verticais
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da validação</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.MigrateVerticalSchemaAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Migra entidades para nova versão do schema vertical
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="fromVersion">Versão origem</param>
            <param name="toVersion">Versão destino</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da migração</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.GetPendingVerticalProcessingAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém entidades que requerem processamento específico do vertical
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="processingType">Tipo de processamento necessário</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de entidades que requerem processamento</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.ExecuteVerticalBatchOperationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executa operação em lote específica do vertical
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="operation">Operação a ser executada</param>
            <param name="entities">Entidades alvo da operação</param>
            <param name="parameters">Parâmetros da operação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da operação em lote</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Repositories.IVerticalRepository`1.GetVerticalMetricsAsync(System.String,System.String,CoreApp.Domain.Interfaces.Repositories.DateRange,System.Threading.CancellationToken)">
            <summary>
            Obtém métricas de desempenho específicas do vertical
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="metricsType">Tipo de métricas</param>
            <param name="dateRange">Período para cálculo das métricas</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Métricas do vertical</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.VerticalAggregationResult">
            <summary>
            Resultado de agregação vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.VerticalConsistencyResult">
            <summary>
            Resultado de validação de consistência vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.VerticalMigrationResult">
            <summary>
            Resultado de migração de schema vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.VerticalBatchResult">
            <summary>
            Resultado de operação em lote vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.VerticalMetrics">
            <summary>
            Métricas específicas de vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Repositories.DateRange">
            <summary>
            Período de tempo para métricas
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.IModuleValidationService">
            <summary>
            Interface para serviço de validação de módulos
            Gerencia acesso a funcionalidades baseado em planos comerciais
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IModuleValidationService.HasModuleAccessAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Verifica se um tenant tem acesso a um módulo específico
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="codigoModulo">Código do módulo (ex: PRODUCTS, SALES)</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se tem acesso ao módulo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IModuleValidationService.GetAvailableModulesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém todos os módulos disponíveis para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de códigos de módulos disponíveis</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IModuleValidationService.ValidateMultipleModulesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Valida múltiplos módulos de uma vez
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="codigosModulos">Lista de códigos de módulos</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Dicionário com resultado da validação para cada módulo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IModuleValidationService.CheckResourceLimitAsync(System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Verifica limites de uso de um módulo para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="codigoModulo">Código do módulo</param>
            <param name="tipoRecurso">Tipo de recurso (ex: produtos, vendas)</param>
            <param name="quantidadeUsada">Quantidade atualmente usada</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se ainda pode usar o recurso</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IModuleValidationService.GetTenantPlanInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém informações detalhadas do plano atual do tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Informações do plano atual</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IModuleValidationService.ValidateOperationAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Valida se uma operação é permitida para o tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="operacao">Nome da operação</param>
            <param name="contexto">Contexto adicional da operação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da validação</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.ModuleValidationInfo">
            <summary>
            Informações de validação de módulo
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.OperationValidationResult">
            <summary>
            Resultado de validação de operação
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService">
            <summary>
            Serviço principal para composição e orquestração de verticais de negócio
            Coordena a interação entre diferentes verticais e o sistema base
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.RegisterVerticalAsync(System.String,CoreApp.Domain.Interfaces.Services.VerticalMetadata,System.Threading.CancellationToken)">
            <summary>
            Registra um novo vertical no sistema
            </summary>
            <param name="verticalType">Tipo do vertical</param>
            <param name="metadata">Metadados do vertical</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se registrado com sucesso</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.GetAvailableVerticalsAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Obtém todos os verticais registrados no sistema
            </summary>
            <param name="activeOnly">Se deve retornar apenas verticais ativos</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de verticais disponíveis</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.GetTenantVerticalsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém verticais ativos para um tenant específico
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de verticais ativos para o tenant</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.ActivateVerticalForTenantAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Ativa um vertical para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="verticalType">Tipo do vertical</param>
            <param name="configuration">Configuração específica do vertical para o tenant</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se ativado com sucesso</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.DeactivateVerticalForTenantAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Desativa um vertical para um tenant
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="verticalType">Tipo do vertical</param>
            <param name="reason">Motivo da desativação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>True se desativado com sucesso</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.ComposeEntityAsync``1(``0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Compõe uma entidade com funcionalidades de múltiplos verticais
            </summary>
            <typeparam name="TEntity">Tipo da entidade</typeparam>
            <param name="entity">Entidade base</param>
            <param name="verticalTypes">Tipos de verticais a serem aplicados</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Entidade com composições aplicadas</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.ExecuteComposedOperationAsync``1(``0,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executa uma operação usando serviços de múltiplos verticais
            </summary>
            <typeparam name="TEntity">Tipo da entidade</typeparam>
            <param name="entity">Entidade alvo</param>
            <param name="operation">Operação a ser executada</param>
            <param name="verticalTypes">Verticais que devem processar a operação</param>
            <param name="parameters">Parâmetros da operação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da composição da operação</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.ResolveVerticalsForEntityAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            Resolve qual vertical deve processar uma entidade baseado em suas propriedades
            </summary>
            <typeparam name="TEntity">Tipo da entidade</typeparam>
            <param name="entity">Entidade a ser analisada</param>
            <param name="operation">Operação que será executada</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista de verticais que devem processar a entidade</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.ValidateVerticalCompatibilityAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Valida se uma configuração de verticais é compatível
            </summary>
            <param name="verticalTypes">Tipos de verticais</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da validação de compatibilidade</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.GetComposedConfigurationAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Obtém configuração padrão para uma combinação de verticais
            </summary>
            <param name="verticalTypes">Tipos de verticais</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Configuração composta dos verticais</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalCompositionService.MigrateVerticalDataAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Executa migração de dados para novos verticais
            </summary>
            <param name="tenantId">ID do tenant</param>
            <param name="fromVerticals">Verticais origem</param>
            <param name="toVerticals">Verticais destino</param>
            <param name="migrationOptions">Opções de migração</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da migração</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.VerticalCompositionResult">
            <summary>
            Resultado de uma operação composta por múltiplos verticais
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Services.VerticalCompositionResult.AllVerticalsSucceeded">
            <summary>
            Indica se todos os verticais processaram com sucesso
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.VerticalCompositionResult.GetVerticalResult``1(System.String)">
            <summary>
            Obtém resultado específico de um vertical
            </summary>
            <typeparam name="T">Tipo do resultado</typeparam>
            <param name="verticalType">Tipo do vertical</param>
            <returns>Resultado do vertical ou default(T)</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.VerticalCompatibilityResult">
            <summary>
            Resultado de validação de compatibilidade entre verticais
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.IVerticalService`1">
            <summary>
            Interface base para serviços específicos de verticais de negócio
            Permite implementar lógicas especializadas por tipo de comércio
            </summary>
            <typeparam name="TEntity">Tipo da entidade que implementa IVerticalEntity</typeparam>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.Services.IVerticalService`1.VerticalType">
            <summary>
            Identificador do vertical que o serviço atende
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.ValidateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Valida uma entidade conforme regras específicas do vertical
            </summary>
            <param name="entity">Entidade a ser validada</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da validação</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.ProcessAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Processa uma entidade aplicando regras específicas do vertical
            </summary>
            <param name="entity">Entidade a ser processada</param>
            <param name="operation">Tipo de operação (CREATE, UPDATE, DELETE)</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Entidade processada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.CalculateAsync(`0,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
            Calcula valores específicos do vertical (preços, impostos, descontos, etc.)
            </summary>
            <param name="entity">Entidade base para cálculo</param>
            <param name="calculationType">Tipo de cálculo</param>
            <param name="parameters">Parâmetros do cálculo</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado do cálculo</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.EnrichAsync(`0,System.String,System.Threading.CancellationToken)">
            <summary>
            Enriquece uma entidade com dados específicos do vertical
            </summary>
            <param name="entity">Entidade a ser enriquecida</param>
            <param name="enrichmentType">Tipo de enriquecimento</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Entidade enriquecida</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.GetDefaultConfigurationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Obtém configurações padrão para o vertical
            </summary>
            <param name="configType">Tipo de configuração</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Configurações do vertical</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.SupportsOperation(System.String)">
            <summary>
            Verifica se uma operação é suportada pelo vertical
            </summary>
            <param name="operation">Nome da operação</param>
            <returns>True se a operação é suportada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.Services.IVerticalService`1.GetMetadataAsync(System.Threading.CancellationToken)">
            <summary>
            Obtém metadados específicos do vertical
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Metadados do vertical</returns>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.VerticalValidationResult">
            <summary>
            Resultado de validação específica de vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.VerticalCalculationResult">
            <summary>
            Resultado de cálculo específico de vertical
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.Services.VerticalMetadata">
            <summary>
            Metadados de um vertical de negócio
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork">
            <summary>
            Interface principal para Unit of Work com controle transacional estado da arte
            Coordena operações entre múltiplos repositórios e verticais de negócio
            </summary>
            <remarks>
            Implementa padrão UoW conforme especificado no CLAUDE.md para coordenar
            transações entre diferentes verticais sem SaveChanges direto nos repositórios
            </remarks>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.Repository``1">
            <summary>
            Obtém repositório específico por tipo da entidade
            </summary>
            <typeparam name="TEntity">Tipo da entidade que implementa ITenantEntity</typeparam>
            <returns>Repositório configurado para a entidade especificada</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.VerticalRepository``1">
            <summary>
            Obtém repositório específico para entidades com suporte a verticais
            </summary>
            <typeparam name="TEntity">Tipo da entidade que implementa IVerticalEntity e ITenantEntity</typeparam>
            <returns>Repositório com funcionalidades verticais</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.BeginTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Inicia uma nova transação para operações coordenadas
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Task representing the operation</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)">
            <summary>
            Confirma todas as mudanças pendentes na transação atual
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Número de entidades afetadas</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.CommitTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Confirma transação atual se existir
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Task representing the operation</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.RollbackTransactionAsync(System.Threading.CancellationToken)">
            <summary>
            Reverte transação atual em caso de erro
            </summary>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Task representing the operation</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.ExecuteInTransactionAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Executa operação em transação isolada com rollback automático em caso de falha
            </summary>
            <typeparam name="T">Tipo do resultado da operação</typeparam>
            <param name="operation">Operação a ser executada na transação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Resultado da operação</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.ExecuteInTransactionAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Executa operação em transação isolada sem retorno
            </summary>
            <param name="operation">Operação a ser executada na transação</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Task representing the operation</returns>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.HasActiveTransaction">
            <summary>
            Indica se existe uma transação ativa
            </summary>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.GetStatistics">
            <summary>
            Obtém estatísticas da sessão atual do UoW
            </summary>
            <returns>Estatísticas de operações realizadas</returns>
        </member>
        <member name="M:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.ClearRepositoryCache">
            <summary>
            Limpa cache de repositórios e força refresh
            </summary>
        </member>
        <member name="E:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.TransactionStarted">
            <summary>
            Evento disparado quando transação é iniciada
            </summary>
        </member>
        <member name="E:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.TransactionCommitted">
            <summary>
            Evento disparado quando transação é confirmada
            </summary>
        </member>
        <member name="E:CoreApp.Domain.Interfaces.UnitOfWork.IUnitOfWork.TransactionRolledBack">
            <summary>
            Evento disparado quando transação é revertida
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.UnitOfWork.UnitOfWorkStatistics">
            <summary>
            Estatísticas de operações do Unit of Work
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.UnitOfWork.UnitOfWorkStatistics.TotalOperations">
            <summary>
            Total de operações realizadas na sessão
            </summary>
        </member>
        <member name="P:CoreApp.Domain.Interfaces.UnitOfWork.UnitOfWorkStatistics.HasPendingChanges">
            <summary>
            Indica se houve modificações pendentes
            </summary>
        </member>
        <member name="T:CoreApp.Domain.Interfaces.UnitOfWork.UnitOfWorkEventArgs">
            <summary>
            Argumentos para eventos do Unit of Work
            </summary>
        </member>
    </members>
</doc>
