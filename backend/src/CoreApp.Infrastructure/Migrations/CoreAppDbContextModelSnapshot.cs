// <auto-generated />
using System;
using CoreApp.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoreApp.Infrastructure.Migrations
{
    [DbContext(typeof(CoreAppDbContext))]
    partial class CoreAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoreApp.Domain.Entities.CategoriaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.ClienteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("CPF")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid?>("ConfiguracaoAnvisaOficialId")
                        .HasColumnType("uuid");

                    b.Property<string>("CorDestaque")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("CorReceita")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("CriadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DiasValidadeReceita")
                        .HasColumnType("integer");

                    b.Property<string>("Icone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsOficialAnvisa")
                        .HasColumnType("boolean");

                    b.Property<string>("NivelPermissaoMinimo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<int?>("QuantidadeMaximaPorReceita")
                        .HasColumnType("integer");

                    b.Property<string>("RegrasValidacao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("ReportarSNGPC")
                        .HasColumnType("boolean");

                    b.Property<bool>("RequerAutorizacaoEspecial")
                        .HasColumnType("boolean");

                    b.Property<bool>("RequerRetencaoReceita")
                        .HasColumnType("boolean");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoReceita")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoAnvisaOficialId");

                    b.ToTable("ClassificacoesAnvisa");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Categoria")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ConfiguracaoGateway")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("ConfiguracaoGlobalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cor")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("CriadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("DisponivelOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("DisponivelPDV")
                        .HasColumnType("boolean");

                    b.Property<string>("GatewayPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("HorarioFim")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("HorarioInicio")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Icone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsSistema")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaximoParcelas")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PercentualDesconto")
                        .HasColumnType("numeric");

                    b.Property<bool>("PermiteDesconto")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermiteParcelamento")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermiteTroco")
                        .HasColumnType("boolean");

                    b.Property<int?>("PrazoCompensacao")
                        .HasColumnType("integer");

                    b.Property<bool>("RequerAutenticacao")
                        .HasColumnType("boolean");

                    b.Property<bool>("RequerComprovante")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("TaxaFixa")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TaxaJurosMensal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TaxaPercentual")
                        .HasColumnType("numeric");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal?>("ValorMaximo")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ValorMinimo")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ValorMinimoParcelamento")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoGlobalId");

                    b.ToTable("FormasPagamento");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AcaoRecomendada")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("BloquearVendas")
                        .HasColumnType("boolean");

                    b.Property<string>("Categoria")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("ConfiguracaoGlobalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cor")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("CriadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("GerarAlerta")
                        .HasColumnType("boolean");

                    b.Property<string>("Icone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsSistema")
                        .HasColumnType("boolean");

                    b.Property<string>("MensagemAlerta")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("NotificarEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("NotificarWhatsApp")
                        .HasColumnType("boolean");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PercentualMaximo")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PercentualMinimo")
                        .HasColumnType("numeric");

                    b.Property<int?>("PrioridadeAlerta")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoGlobalId");

                    b.ToTable("StatusEstoque");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AparecerRelatorios")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("AtualizarEstoque")
                        .HasColumnType("boolean");

                    b.Property<string>("Categoria")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("ConfiguracaoGlobalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cor")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("CriadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("EnviarNotificacao")
                        .HasColumnType("boolean");

                    b.Property<bool>("GerarComprovante")
                        .HasColumnType("boolean");

                    b.Property<string>("Icone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsSistema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStatusFinal")
                        .HasColumnType("boolean");

                    b.Property<bool>("LiberarProdutos")
                        .HasColumnType("boolean");

                    b.Property<string>("MensagemPadrao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<bool>("PermiteCancelamento")
                        .HasColumnType("boolean");

                    b.Property<bool>("PermiteEstorno")
                        .HasColumnType("boolean");

                    b.Property<string>("ProximosStatusValidos")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("StatusAposTimeout")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("TempoLimiteMinutos")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoGlobalId");

                    b.ToTable("StatusPagamento");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AparecerDashboard")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("BloquearOperacoesOffline")
                        .HasColumnType("boolean");

                    b.Property<string>("Categoria")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<Guid?>("ConfiguracaoGlobalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Cor")
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<string>("CriadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("GerarAlerta")
                        .HasColumnType("boolean");

                    b.Property<string>("Icone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("IntervaloTentativasMinutos")
                        .HasColumnType("integer");

                    b.Property<bool>("IsSistema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStatusFinal")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaximoTentativas")
                        .HasColumnType("integer");

                    b.Property<string>("MensagemPadrao")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("NotificarAdministradores")
                        .HasColumnType("boolean");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<bool>("PermiteRetry")
                        .HasColumnType("boolean");

                    b.Property<int?>("PrioridadeAlerta")
                        .HasColumnType("integer");

                    b.Property<string>("ProximosStatusValidos")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("SincronizacaoImediata")
                        .HasColumnType("boolean");

                    b.Property<string>("StatusAposTimeout")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("TempoLimiteMinutos")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TiposDadosAplicaveis")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoGlobalId");

                    b.ToTable("StatusSincronizacao");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.FormaPagamentoVendaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DadosAdicionais")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataProcessamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FormaPagamentoId")
                        .HasColumnType("uuid");

                    b.Property<int?>("NumeroParcelas")
                        .HasColumnType("integer");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TransacaoExternaId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendaId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("VendaId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("VendaId");

                    b.HasIndex("VendaId1");

                    b.ToTable("FormasPagamentoVenda");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.FornecedorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.ItemVendaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoProduto")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("PercentualDesconto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,3)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValue("UN");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("ValorDesconto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VendaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("TenantId", "ProdutoId")
                        .HasDatabaseName("IX_ItensVenda_TenantId_ProdutoId");

                    b.HasIndex("TenantId", "VendaId")
                        .HasDatabaseName("IX_ItensVenda_TenantId_VendaId");

                    b.HasIndex("VendaId", "ProdutoId")
                        .HasDatabaseName("IX_ItensVenda_VendaId_ProdutoId");

                    b.ToTable("ItensVenda", (string)null);
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.LoteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.ModuloEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.MovimentacaoEstoqueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("MovimentacoesEstoque");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.PlanoComercialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("PlanosComerciais");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.PlanoModuloEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("PlanosModulos");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.ProdutoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AliquotaICMS")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("Arquivado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("CEST")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CST")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal>("EstoqueAtual")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("EstoqueMinimo")
                        .HasColumnType("decimal(18,3)");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("MargemLucro")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("NCM")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("Origem")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecoCusto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValue("UN");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("VerticalActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("VerticalConfiguration")
                        .HasColumnType("jsonb");

                    b.Property<string>("VerticalProperties")
                        .HasColumnType("jsonb");

                    b.Property<string>("VerticalSchemaVersion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasDefaultValue("1.0");

                    b.Property<string>("VerticalType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("GENERICO");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TenantId", "Ativo")
                        .HasDatabaseName("IX_Produtos_TenantId_Ativo");

                    b.HasIndex("TenantId", "CodigoBarras")
                        .HasDatabaseName("IX_Produtos_TenantId_CodigoBarras");

                    b.HasIndex("TenantId", "CodigoInterno")
                        .HasDatabaseName("IX_Produtos_TenantId_CodigoInterno");

                    b.HasIndex("TenantId", "Excluido")
                        .HasDatabaseName("IX_Produtos_TenantId_Excluido");

                    b.HasIndex("TenantId", "Nome")
                        .HasDatabaseName("IX_Produtos_TenantId_Nome");

                    b.HasIndex("TenantId", "VerticalType")
                        .HasDatabaseName("IX_Produtos_TenantId_VerticalType");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.PromocaoCategoriaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("PromocoesCategorias");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.PromocaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Promocoes");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.PromocaoProdutoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("PromocoesProdutos");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.RelatorioArquivamentoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("RelatoriosArquivamento");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.TenantModuloEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TenantsModulos");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.TenantPlanoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TenantsPlanos");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.TipoMovimentacaoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposMovimentacao");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.VendaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Arquivado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("ChaveNFCe")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DataArquivamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("MotivoCancelamento")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotivoExclusao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("NumeroNFCe")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<long>("NumeroVenda")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("PENDENTE");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TipoVenda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("BALCAO");

                    b.Property<DateTime>("UltimaMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("UsuarioAtualizacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioCriacao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UsuarioVendaId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("ValorDesconto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ValorImpostos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ValorPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("ValorProdutos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTroco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioVendaId");

                    b.HasIndex("TenantId", "ClienteId")
                        .HasDatabaseName("IX_Vendas_TenantId_ClienteId");

                    b.HasIndex("TenantId", "DataVenda")
                        .HasDatabaseName("IX_Vendas_TenantId_DataVenda");

                    b.HasIndex("TenantId", "Excluido")
                        .HasDatabaseName("IX_Vendas_TenantId_Excluido");

                    b.HasIndex("TenantId", "NumeroVenda")
                        .IsUnique()
                        .HasDatabaseName("IX_Vendas_TenantId_NumeroVenda");

                    b.HasIndex("TenantId", "Status")
                        .HasDatabaseName("IX_Vendas_TenantId_Status");

                    b.HasIndex("TenantId", "UsuarioVendaId")
                        .HasDatabaseName("IX_Vendas_TenantId_UsuarioVendaId");

                    b.ToTable("Vendas", (string)null);
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity", "ConfiguracaoAnvisaOficial")
                        .WithMany("ConfiguracoesPersonalizadas")
                        .HasForeignKey("ConfiguracaoAnvisaOficialId");

                    b.Navigation("ConfiguracaoAnvisaOficial");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity", "ConfiguracaoGlobal")
                        .WithMany("ConfiguracoesFilhas")
                        .HasForeignKey("ConfiguracaoGlobalId");

                    b.Navigation("ConfiguracaoGlobal");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity", "ConfiguracaoGlobal")
                        .WithMany("ConfiguracoesFilhas")
                        .HasForeignKey("ConfiguracaoGlobalId");

                    b.Navigation("ConfiguracaoGlobal");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity", "ConfiguracaoGlobal")
                        .WithMany("ConfiguracoesFilhas")
                        .HasForeignKey("ConfiguracaoGlobalId");

                    b.Navigation("ConfiguracaoGlobal");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity", "ConfiguracaoGlobal")
                        .WithMany("ConfiguracoesFilhas")
                        .HasForeignKey("ConfiguracaoGlobalId");

                    b.Navigation("ConfiguracaoGlobal");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.FormaPagamentoVendaEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreApp.Domain.Entities.VendaEntity", null)
                        .WithMany("FormasPagamento")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreApp.Domain.Entities.VendaEntity", "Venda")
                        .WithMany()
                        .HasForeignKey("VendaId1");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.ItemVendaEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreApp.Domain.Entities.VendaEntity", "Venda")
                        .WithMany("Itens")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.ProdutoEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.CategoriaEntity", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.VendaEntity", b =>
                {
                    b.HasOne("CoreApp.Domain.Entities.ClienteEntity", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CoreApp.Domain.Entities.UsuarioEntity", "UsuarioVenda")
                        .WithMany()
                        .HasForeignKey("UsuarioVendaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("UsuarioVenda");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.ClassificacaoAnvisaEntity", b =>
                {
                    b.Navigation("ConfiguracoesPersonalizadas");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.FormaPagamentoEntity", b =>
                {
                    b.Navigation("ConfiguracoesFilhas");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusEstoqueEntity", b =>
                {
                    b.Navigation("ConfiguracoesFilhas");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusPagamentoEntity", b =>
                {
                    b.Navigation("ConfiguracoesFilhas");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.Configuration.StatusSincronizacaoEntity", b =>
                {
                    b.Navigation("ConfiguracoesFilhas");
                });

            modelBuilder.Entity("CoreApp.Domain.Entities.VendaEntity", b =>
                {
                    b.Navigation("FormasPagamento");

                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
