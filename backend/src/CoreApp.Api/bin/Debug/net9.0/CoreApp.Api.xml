<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreApp.Api</name>
    </assembly>
    <members>
        <member name="T:CoreApp.Api.Controllers.ExampleController">
            <summary>
            Controller de exemplo demonstrando o uso do sistema de verticais
            Mostra como integrar propriedades verticais de forma transparente
            </summary>
        </member>
        <member name="M:CoreApp.Api.Controllers.ExampleController.CriarProdutoComVertical(CoreApp.Api.Controllers.ProductCreateRequest)">
            <summary>
            Exemplo de criação de produto com propriedades verticais da Padaria
            </summary>
            <param name="request">Dados do produto incluindo propriedades da vertical Padaria</param>
        </member>
        <member name="M:CoreApp.Api.Controllers.ExampleController.ObterProduto(System.Guid)">
            <summary>
            Exemplo de obtenção de produto por ID
            </summary>
            <param name="id">ID do produto</param>
        </member>
        <member name="M:CoreApp.Api.Controllers.ExampleController.AtivarVertical(System.String)">
            <summary>
            Exemplo de ativação de vertical para demonstração
            </summary>
            <param name="verticalName">Nome da vertical a ativar</param>
        </member>
        <member name="T:CoreApp.Api.Controllers.HealthController">
            <summary>
            Controller para verificação de saúde do sistema CoreApp
            Fornece informações sobre status dos serviços e dependências
            </summary>
        </member>
        <member name="M:CoreApp.Api.Controllers.HealthController.GetHealth">
            <summary>
            Verifica o status geral do sistema
            </summary>
            <returns>Status de saúde do sistema</returns>
        </member>
        <member name="M:CoreApp.Api.Controllers.HealthController.GetCacheHealth">
            <summary>
            Verifica status específico do cache
            </summary>
            <returns>Estatísticas do cache</returns>
        </member>
        <member name="M:CoreApp.Api.Controllers.HealthController.Ping">
            <summary>
            Endpoint básico para verificação rápida (usado por load balancers)
            </summary>
            <returns>Status simples</returns>
        </member>
        <member name="M:CoreApp.Api.Controllers.HealthController.GetVersion">
            <summary>
            Obtém informações da versão e build
            </summary>
            <returns>Informações de versão</returns>
        </member>
        <member name="T:CoreApp.Api.Controllers.HealthStatus">
            <summary>
            Status de saúde do sistema
            </summary>
        </member>
        <member name="T:CoreApp.Api.Controllers.HealthCheck">
            <summary>
            Verificação individual de saúde
            </summary>
        </member>
        <member name="T:CoreApp.Api.Controllers.VersionInfo">
            <summary>
            Informações de versão
            </summary>
        </member>
        <member name="T:CoreApp.Api.Controllers.V1.ProdutosController">
            <summary>
            Controller para gestão de produtos comerciais multi-tenant
            Implementa operações CRUD com validação de módulos e isolamento por tenant
            </summary>
        </member>
        <member name="M:CoreApp.Api.Controllers.V1.ProdutosController.ListarProdutos(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Lista produtos do tenant atual com paginação
            </summary>
            <param name="pageNumber">Número da página (padrão: 1)</param>
            <param name="pageSize">Tamanho da página (padrão: 20)</param>
            <param name="search">Termo de busca opcional</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Lista paginada de produtos</returns>
        </member>
        <member name="M:CoreApp.Api.Controllers.V1.ProdutosController.ObterProduto(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Obtém um produto específico por ID
            </summary>
            <param name="id">ID do produto</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Produto encontrado</returns>
        </member>
        <member name="M:CoreApp.Api.Controllers.V1.ProdutosController.CriarProduto(CoreApp.Api.Controllers.V1.CriarProdutoRequest,System.Threading.CancellationToken)">
            <summary>
            Cria um novo produto
            </summary>
            <param name="request">Dados do produto a ser criado</param>
            <param name="cancellationToken">Token de cancelamento</param>
            <returns>Produto criado</returns>
        </member>
        <member name="T:CoreApp.Api.Controllers.V1.PagedResult`1">
            <summary>
            Resultado paginado genérico
            </summary>
        </member>
        <member name="T:CoreApp.Api.Controllers.V1.ProdutoDto">
            <summary>
            DTO de produto para API
            </summary>
        </member>
        <member name="T:CoreApp.Api.Controllers.V1.CriarProdutoRequest">
            <summary>
            Request para criação de produto
            </summary>
        </member>
        <member name="T:CoreApp.Api.Services.MockModuleValidationService">
            <summary>
            Implementação mock do serviço de validação de módulos para desenvolvimento
            </summary>
        </member>
    </members>
</doc>
